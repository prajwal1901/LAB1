#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_NUM_NUMBERS 100
#define MAX_MOBILE_LENGTH 12


void merge(int arr[], int left, int mid, int right) {
    int left_size = mid - left + 1;
    int right_size = right - mid;

    int left_array[left_size], right_array[right_size];

    for (int i = 0; i < left_size; i++)
        left_array[i] = arr[left + i];
    for (int j = 0; j < right_size; j++)
        right_array[j] = arr[mid + 1 + j];

    int i = 0, j = 0, k = left;

    while (i < left_size && j < right_size) {
        if (left_array[i] <= right_array[j]) {
            arr[k] = left_array[i];
            i++;
        } else {
            arr[k] = right_array[j];
            j++;
        }
        k++;
    }

    while (i < left_size) {
        arr[k] = left_array[i];
        i++;
        k++;
    }

    while (j < right_size) {
        arr[k] = right_array[j];
        j++;
        k++;
    }
}


void mergeSort(int arr[], int left, int right) {
    if (left < right) {
        int mid = left + (right - left) / 2;

        mergeSort(arr, left, mid);
        mergeSort(arr, mid + 1, right);

        merge(arr, left, mid, right);
    }
}


int main() {
    int mobileNumbers[MAX_NUM_NUMBERS];
    int numNumbers;

    
    printf("Enter the number of mobile numbers: ");
    scanf("%d", &numNumbers);

    printf("Enter the mobile numbers:\n");
    for (int i = 0; i < numNumbers; i++) {
        scanf("%d", &mobileNumbers[i]);
    }

    
    mergeSort(mobileNumbers, 0, numNumbers - 1);

    
    printf("Sorted mobile numbers:\n");
    for (int i = 0; i < numNumbers; i++) {
        printf("%d\n", mobileNumbers[i]);
    }

    return 0;
}
